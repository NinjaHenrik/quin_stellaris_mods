#Uninhabitable Terraforming Events

namespace = quinterra

country_event = {
	id = quinterra.1
	title = quinterra.1.name
	desc = quinterra.1.desc
	picture = GFX_evt_toxic
	show_sound = event_radio_chatter
	location = capital_scope

	is_triggered_only = yes

	option = {
		name = quinterra.1.a
		capital_scope = {
			enable_special_project = {
				name = "ADVANCED_TERRAFORMING_PROJECT"
				location = this
				owner = root
			}
		}
	}
}

country_event = {
	id = quinterra.2
	title = quinterra.2.name
	desc = quinterra.2.desc
	picture = GFX_evt_toxic
	show_sound = event_radio_chatter
	location = capital_scope

	is_triggered_only = yes

	option = {
		name = "ADVANCED_TERRAFORM_FROZEN"
		custom_tooltip = quinterra.2.frozen.tooltip
		hidden_effect = {
			add_research_option = tech_frozen_terraformation
			give_technology = {
				tech = tech_frozen_terraformation
			}
		}
	}
	option = {
		name = "ADVANCED_TERRAFORM_MOLTEN"
		custom_tooltip = quinterra.2.molten.tooltip
		hidden_effect = {
			add_research_option = tech_molten_terraformation
			give_technology = {
				tech = tech_molten_terraformation
			}
		}
	}
	option = {
		name = "ADVANCED_TERRAFORM_BARREN"
		custom_tooltip = quinterra.2.barren.tooltip
		hidden_effect = {
			add_research_option = tech_barren_terraformation
			give_technology = {
				tech = tech_barren_terraformation
			}
		}
	}
	option = {
		name = "ADVANCED_TERRAFORM_TOXIC"
		custom_tooltip = quinterra.2.toxic.tooltip
		hidden_effect = {
			add_research_option = tech_toxic_terraformation
			give_technology = {
				tech = tech_toxic_terraformation
			}
		}
	}
}

#############################
##Detect if PD is installed##
#############################
country_event = {
	id = quinterra.3
	#title = quinterra.3.name
	#desc = quinterra.3.desc
	#picture = GFX_evt_toxic
	hide_window = yes
	is_triggered_only = yes
	location = country_scope
	
	trigger = {
		NOT = { has_country_flag = has_planetary_diversity }
	}
	
	immediate = {
		random_planet = {
			limit = {
				OR = {
					is_planet_class = pc_glacial
					is_planet_class = pc_frozen_desert
					is_planet_class = pc_steppe
					is_planet_class = pc_hadesert
					is_planet_class = pc_antarctic
					is_planet_class = pc_subarctic
					is_planet_class = pc_geothermal
					is_planet_class = pc_cascadian
					is_planet_class = pc_swamp
					is_planet_class = pc_oasis
					is_planet_class = pc_methane
					is_planet_class = pc_ammonia
				}
			}
			if = {
				limit = { 
					OR = {
						is_planet_class = pc_glacial
						is_planet_class = pc_frozen_desert
						is_planet_class = pc_steppe
						is_planet_class = pc_hadesert
						is_planet_class = pc_antarctic
						is_planet_class = pc_subarctic
						is_planet_class = pc_geothermal
						is_planet_class = pc_cascadian
						is_planet_class = pc_swamp
						is_planet_class = pc_oasis
						is_planet_class = pc_methane
						is_planet_class = pc_ammonia
					}
				}
				every_country = {
					set_global_flag = has_planetary_diversity
				}
			}
		}
	}
}
#############################
##Detect if NW is installed##
#############################
country_event = {
	id = quinterra.4
	#title = quinterra.4.name
	#desc = quinterra.4.desc
	#picture = GFX_evt_toxic
	hide_window = yes
	is_triggered_only = yes
	location = country_scope
	
	trigger = {
		NOT = { has_country_flag = has_new_worlds }
	}
	
	immediate = {
		random_planet = {
			limit = {
				OR = {
					is_planet_class = pc_geocrystalline
					is_planet_class = pc_geometallic
					is_planet_class = pc_retinal
					is_planet_class = pc_terraformed
					is_planet_class = pc_marginal_cold
					is_planet_class = pc_marginal
					is_planet_class = pc_geoplastic
					is_planet_class = pc_marginal_dry
				}
			}
			if = {
				limit = { 
					OR = {
						is_planet_class = pc_geocrystalline
						is_planet_class = pc_geometallic
						is_planet_class = pc_retinal
						is_planet_class = pc_terraformed
						is_planet_class = pc_marginal_cold
						is_planet_class = pc_marginal
						is_planet_class = pc_geoplastic
						is_planet_class = pc_marginal_dry
					}
				}
				every_country = {
					set_global_flag = has_new_worlds
				}
			}
		}
	}
}
